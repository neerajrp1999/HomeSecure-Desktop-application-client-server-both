package server.main;

import server.form.*;
import server.login.Home_Screen_Server;
import server.login.Open_Door;
import server.swing.EventLogin;
import server.swing.EventOpenTheDoor;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class
Main extends javax.swing.JFrame {

    private Home home;
    private Home2 home2;


    public Main() {

        initComponents();
        home = new Home();
        home2 = new Home2();
        EventOpenTheDoor eventOpenTheDoor=new EventOpenTheDoor() {
            @Override
            public void OpenDoor() {
                main.removeAll();
                main.add(home2);
                main.revalidate();
                main.repaint();
                Timer timer = new Timer(3000, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent arg0) {
                        CloseDoor();
                    }
                });
                timer.setRepeats(false); // Only execute once
                timer.start();
            }

            @Override
            public void CloseDoor() {
                main.removeAll();
                main.add(home_screen_server);
                main.revalidate();
                main.repaint();
            }
        };
        EventLogin event = new EventLogin() {
            @Override
            public void loginDone() {
                main.removeAll();
                main.add(home);
                main.revalidate();
                main.repaint();

            }

            @Override
            public void logOut() {
                main.removeAll();
                main.add(home_screen_server);
                main.revalidate();
                main.repaint();
            }
        };
        home_screen_server.setEventLogin(event);
        home.setEventLogin(event);

        home_screen_server.setEventOpenDoor(eventOpenTheDoor);
        home2.setEventOpenDoor(eventOpenTheDoor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        home_screen_server = new Home_Screen_Server(this);
        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        main.setLayout(new java.awt.BorderLayout());
        main.add(home_screen_server, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 1309, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new open_screen.splashscreen.SplashScreen(null, true,true).setVisible(true);
                new Main().setVisible(true);
            }
        });
    }

    private Home_Screen_Server home_screen_server;
    private javax.swing.JPanel main;

}